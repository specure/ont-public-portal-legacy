angular.module('nettestApp').service('opentestResultService', [
  '$http', '$filter', 'MAIN',
  function($http, $filter, MAIN) {
    var translateFilter = $filter('translate');
    var speedFilter = $filter('formatSpeed');

    var URL_BASE = MAIN.SERVER.STATISTICS + '/';

    var OPENTEST_DETAILVIEW_KEYS = [
      'time',
      'network_type',
      'cat_technology',
      'location',
      'distance',
      //'country_geoip',
      'country_asn',
      'ip_anonym',
      'asn',
      'public_ip_as_name',
      'zip_code',
      'network_name',
      'provider_name',
      'network_mcc_mnc',
      'network_country',
      'roaming_type',
      'sim_mcc_mnc',
      'sim_country',
      'wifi_link_speed',
      'lte_rsrq',
      'lte_rsrp',
      'nat_type',
      // SDRU 50
      //'platform',
      //SDRU 50
      //'model_native',
      //'testdl_if_bytes_download',
      //'testdl_if_bytes_upload',
      //'testul_if_bytes_download',
      //'testul_if_bytes_upload',
      'time_dl_ms',
      'duration_download_ms',
      //'bytes_download',
      //'ndt_download_kbit',
      'time_ul_ms',
      'duration_upload_ms',
      //'bytes_upload',
      //'ndt_upload_kbit',
      'server_name',
      'model',
      // SDRU-110 remove client version info
      //'client_version',
      'duration',
      // SDRU 50
      //'num_threads_requested',
      'num_threads',
      'num_threads_ul',
      'speed_test_duration',
      'num_threads_dl',
      'num_threads_ul',
      'adv_spd_option_name',
      'adv_spd_down_kbit',
      'adv_spd_up_kbit',
      'adv_spd_deviation_up_kbit',
      'adv_spd_deviation_down_kbit',
      'additional_report_fields.peak_down_kbit',
      'additional_report_fields.peak_up_kbit'
    ];

    var simpleSearch = function(key, value) {
      var e = {}; e[key] = encodeURIComponent(value); return e;
    };

    var simpleSearchLowerCase = function(key, value) {
      var e = {}; e[key] = encodeURIComponent(angular.lowercase(value)); return e;
    };

    var msFilter = function(value) {
      return value.toFixed(0) + ' ' + translateFilter('unit.milliseconds');
    };

    var byteFilter = function(value) {
      return speedFilter(value/1000) + ' ' + translateFilter('unit.MB');
    };

    var kbitFilter = function(value) {
      return (value/1000).toFixed(2) + ' ' + translateFilter('unit.mbps');
    };

    var DETAILVIEW_KEY_FUNCTIONALITY = {
      'network_type': {
        'search': simpleSearch
      },
      'cat_technology': {
        'search': simpleSearch
      },
      'network_name': {
        'search': simpleSearch
      },
      'provider_name': {
        'search': simpleSearch
      },
      'time': {
        'search': function(key, value) {
          return dateQueryString(key, value, $filter);
        }
      },
      'network_country': {
        'translate_prefix': 'countries.',
        'search': simpleSearch
      },
      'sim_country': {
        'translate_prefix': 'countries.',
        'search': simpleSearch
      },
      'country_geoip': {
        'translate_prefix': 'countries.',
        'search': simpleSearchLowerCase
      },
      'country_location': {
        'translate_prefix': 'countries.'
      },
      'public_ip_as_name': {
        'search': simpleSearch
      },
      'country_asn': {
        'translate_prefix': 'countries.'
      },
      'platform': {
        'search': simpleSearch
      },
      'model': {
        'search': simpleSearch
      },
      'client_version': {
        'search': simpleSearch
      },
      'open_uuid': {
        'search': simpleSearch
      },
      'duration_download_ms': {
        'filter': msFilter
      },
      'duration_upload_ms': {
        'filter': msFilter
      },
      'time_dl_ms': {
        'filter': msFilter
      },
      'time_ul_ms': {
        'filter': msFilter
      },
      'testdl_if_bytes_upload': {
        'filter': byteFilter
      },
      'testul_if_bytes_upload': {
        'filter': byteFilter
      },
      'testdl_if_bytes_download': {
        'filter': byteFilter
      },
      'testul_if_bytes_download': {
        'filter': byteFilter
      },
      'bytes_upload': {
        'filter': byteFilter
      },
      'bytes_download': {
        'filter': byteFilter
      },
      'additional_report_fields.peak_up_kbit': {
        'filter': kbitFilter
      },
      'additional_report_fields.peak_down_kbit': {
        'filter': kbitFilter
      }
    };

    this.getOpenTest = function(openTestUuid, successFunc, failureFunc) {
      $http.get(URL_BASE + 'opentests/' + openTestUuid).then(
        function(data) {
          if (data.data) {
            //FIX for single location on WEB and Android: add location info to empty location array
            if (data.data.lat && data.data.long && data.data.loc_accuracy &&
							data.data.speed_curve && data.data.speed_curve.location && data.data.speed_curve.location.length===0) {

              data.data.speed_curve.location.push({
                lat: data.data.lat,
                long: data.data.long,
                time_elapsed: 0,
                loc_accuracy: data.data.loc_accuracy
              });
            }
          }
          if (successFunc) {
            successFunc(data.data);
          }
        },
        function(error) {
          if (failureFunc) {
            failureFunc(error);
          }
        });
    };

    this.getOpenTestDetailViewKeys = function() {
      var parsedKeys = {};
      angular.forEach(OPENTEST_DETAILVIEW_KEYS, function(value) {
        parsedKeys[value] = DETAILVIEW_KEY_FUNCTIONALITY[value];
      });
      return parsedKeys;
    };
  }]);
